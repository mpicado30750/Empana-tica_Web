@using Microsoft.AspNetCore.Identity
@using TotalHRInsight.DAL

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @GetUserRole(UserManager.GetUserName(User))
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Cerrar sesión</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
        </li>
    }
</ul>

@functions {
    public string GetUserRole(string userName)
    {
        var user = UserManager.FindByNameAsync(userName).Result;
        if (user != null)
        {
            var roles = UserManager.GetRolesAsync(user).Result;
            if (roles != null && roles.Count > 0)
            {
                // Assuming a user has only one role, return the first one.
                return $"{roles.First()} {user.Nombre} {user.PrimerApellido}";
            }
        }
        return "Error ";
    }
}
